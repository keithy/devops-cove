#!/usr/bin/env ruby
# frozen_string_literal: true
require 'yaml'
root = File.expand_path(File.join(__dir__, '..', '..'))
dir  = File.join(root, 'the-github-taverns', 'the-coopers-inn', 'linux')
Dir.chdir(dir)
canon = Dir.glob('builder-*.hm.yml').sort.first
puts "Canonical: #{canon}"
canon_yaml = YAML.load_file(canon)
canon_steps = canon_yaml.dig('jobs','build','steps') || []
common_names = canon_steps.map { |s| s['name'] }.compact & [
  'Import env','Pre-build hooks','Post-build hooks','Prepare payload','Harbour Master Dispatch']
canon_map = canon_steps.map { |s| [s['name'], s] }.to_h
Dir.glob('builder-*.hm.yml').sort.each do |f|
  next if f == canon
  y = YAML.load_file(f)
  steps = y.dig('jobs','build','steps') || []
  changed = false
  steps.each_with_index do |s, i|
    name = s['name']
    next unless common_names.include?(name)
    src = canon_map[name]
    next unless src
    src_norm = Marshal.load(Marshal.dump(src)); src_norm.delete('id')
    dst_norm = Marshal.load(Marshal.dump(s));   dst_norm.delete('id')
    unless dst_norm == src_norm
      steps[i] = Marshal.load(Marshal.dump(src))
      changed = true
    end
  end
  if changed
    File.write(f, y.to_yaml)
    puts "[SYNC] #{f}"
  else
    puts "[OK]   #{f}"
  end
end
